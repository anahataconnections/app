{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"871b7089da4e693a-FRA","connection":"keep-alive","content-encoding":"br","content-security-policy":"connect-src 'self' https:;img-src 'self' data: blob: dl.airtable.com saral-strapi.s3.ap-south-1.amazonaws.com;media-src 'self' data: blob: dl.airtable.com saral-strapi.s3.ap-south-1.amazonaws.com;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'","content-type":"application/json; charset=utf-8","date":"Tue, 09 Apr 2024 15:13:11 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","referrer-policy":"no-referrer","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=EB%2BmkUAOISQRXpOQicP6gRbaa0iRtl7qCE%2FaE%2BMVb0w4DtGwKubhD%2FE%2BD4zw54ma0urt%2BzgOHVCMWYp7Njre4BP46d%2BndyxMpsJf27H0WKhdy%2FvwNj3bvTs5y1ehaJiukzOlie5j%2BUnE\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","strict-transport-security":"max-age=31536000; includeSubDomains","transfer-encoding":"chunked","vary":"Origin","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-powered-by":"Strapi <strapi.io>"},"body":"","status":200,"url":""},"revalidate":31536000,"tags":[]}